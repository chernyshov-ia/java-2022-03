plugins {
    id 'java'
    id "com.google.protobuf" version "0.8.16"
    id 'idea'
}

dependencies {
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation("ch.qos.logback:logback-classic")

    implementation "io.grpc:grpc-netty"
    implementation "io.grpc:grpc-protobuf"
    implementation "io.grpc:grpc-stub"
    implementation "com.google.protobuf:protobuf-java"
    implementation "com.google.errorprone:error_prone_annotations:${Versions.errorProneAnnotations}"
    implementation "org.apache.tomcat:annotations-api:${Versions.tomcatAnnotationsApi}"

    testImplementation ('org.junit.jupiter:junit-jupiter-api')
    testImplementation ('org.junit.jupiter:junit-jupiter-engine')
    testImplementation ('org.junit.jupiter:junit-jupiter-params')
    testImplementation ('org.assertj:assertj-core')
    testImplementation ('org.mockito:mockito-core')
    testImplementation ('org.mockito:mockito-junit-jupiter')
}

def filesBaseDir = "$projectDir/build/generated"
def protoSrcDir = "$projectDir/build/generated/proto"
def grpcSrcDir = "$projectDir/build/generated/grpc"

sourceSets {
    main {
        proto {
            srcDir protoSrcDir
        }
        java {
            srcDir grpcSrcDir
        }
    }
}

idea {
    module {
        sourceDirs += file(protoSrcDir)
        sourceDirs += file(grpcSrcDir)
    }
}


protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.12.1'
    }

    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.30.2'

        }
    }

    generatedFilesBaseDir = filesBaseDir
    generateProtoTasks {
        ofSourceSet('main')*.plugins { grpc {} }
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.withType(JavaCompile) {
    options.with {
        encoding = 'UTF-8'
    }
}

/*
tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
    systemProperty "console.encoding", "UTF-8"
}
*/
